name: Android Universal ABI Build

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-android-multi-abi:
    runs-on: ubuntu-latest

    env:
      ANDROID_NDK_HOME: ${{ github.workspace }}/android-ndk-r26d

    strategy:
      matrix:
        abi: [arm64-v8a, armeabi-v7a, x86, x86_64]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Download Android NDK
        run: |
          wget -q https://dl.google.com/android/repository/android-ndk-r26d-linux.zip
          unzip -q android-ndk-r26d-linux.zip

      - name: Set up build directory
        run: |
          mkdir -p build/${{ matrix.abi }}
          mkdir -p libs/${{ matrix.abi }}

      - name: Configure CMake for ${{ matrix.abi }}
        working-directory: build/${{ matrix.abi }}
        run: |
          cmake \
            -DCMAKE_TOOLCHAIN_FILE=${ANDROID_NDK_HOME}/build/cmake/android.toolchain.cmake \
            -DANDROID_ABI=${{ matrix.abi }} \
            -DANDROID_PLATFORM=android-21 \
            ../..

      - name: Build for ${{ matrix.abi }}
        working-directory: build/${{ matrix.abi }}
        run: cmake --build .

      - name: Find and copy binary to libs/${{ matrix.abi }}
        run: |
          BIN=$(find build/${{ matrix.abi }} -type f -executable -name "core_task_optimizer*" | head -n1)
          if [ -z "$BIN" ]; then
            echo "No binary found for ${{ matrix.abi }}"
            exit 1
          fi
          cp "$BIN" "libs/${{ matrix.abi }}/task_optimizer"

      - name: Upload built binary for ${{ matrix.abi }}
        uses: actions/upload-artifact@v4
        with:
          name: libs-${{ matrix.abi }}
          path: libs/${{ matrix.abi }}/